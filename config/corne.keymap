/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Tab {
            bindings = <&kp TAB>;
            key-positions = <14 16>;
        };

        MoveWindowRight {
            bindings = <&kp LG(RIGHT)>;
            key-positions = <3 4 5>;
        };

        MoveWindowLeft {
            bindings = <&kp LG(LEFT)>;
            key-positions = <2 3 1>;
        };

        Maximize {
            bindings = <&kp LG(UP_ARROW)>;
            key-positions = <2 3 4>;
        };

        Minimize {
            bindings = <&kp LG(DOWN)>;
            key-positions = <28 27 26>;
        };

        AppView {
            bindings = <&kp LA(TAB)>;
            key-positions = <14 15 16>;
        };

        PageUp {
            bindings = <&kp PAGE_UP>;
            key-positions = <4 16>;
        };

        PageDown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <16 28>;
        };

        OpenApp {
            bindings = <&kp LA(SPACE)>;
            key-positions = <16 15 14 13>;
        };

        Brace {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        EndBrace {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        CurlyBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <19 20>;
        };

        EndCurlyBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 21>;
        };

        SquareBrace {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        EndSquareBrace {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <14 15>;
            layers = <0 2 1 3 4 6 7>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <16 15>;
            layers = <0 1 2 3 4 6 7 8>;
        };

        Escape {
            bindings = <&kp ESC>;
            key-positions = <1 2 3 4>;
        };

        Gaming {
            bindings = <&tog 5>;
            key-positions = <16 14 13>;
        };

        Numlock {
            bindings = <&tog 1>;
            key-positions = <2 28>;
        };

        Right_Side_Enter {
            bindings = <&kp ENTER>;
            key-positions = <22 21>;
        };

        Right_Hand_BKSPC {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 9>;
        };

        Shut_Down {
            bindings = <&Shut_Down>;
            key-positions = <1 25 14 27>;
        };

        R_Shift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <34 33>;
        };

        R_Space {
            bindings = <&kp SPACE>;
            key-positions = <30 31 32>;
        };
    };

    macros {
        Shut_Down: Shut_Down {
            compatible = "zmk,behavior-macro";
            label = "SHUT_DOWN";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LG(X) &kp U &kp U>;
        };
    };

    behaviors {
        StickyKey: StickyKey {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKYKEY";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <500>;
        };
        StickyWinKey: StickyWinKey {
            compatible = "zmk,behavior-tap-dance";
            label = "STICKYWINKEY";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&StickyKey LEFT_WIN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &lt 8 Q  &kp W    &kp F          &kp P                 &kp G                     &kp J            &kp L                  &kp U          &kp Y    &kp SEMICOLON  &none
&none  &lt 1 A  &lt 2 S  &lt 6 R        &lt 6 T               &kp D                     &kp H            &lt 6 N                &lt 6 E        &kp I    &kp O          &none
&none  &lt 4 Z  &kp X    &kp C          &kp V                 &kp B                     &kp K            &kp M                  &kp COMMA      &kp DOT  &kp FSLH       &none
                         &StickyWinKey  &mt LEFT_SHIFT SPACE  &mt LEFT_CONTROL ENTER    &mt RCTRL ENTER  &mt RIGHT_SHIFT SPACE  &StickyWinKey
            >;
        };

        NumSym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none  &kp N7  &kp N8      &kp N9             &kp SLASH          &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH     &none  &none
&trans  &none  &kp N4  &kp N5      &kp NUMBER_6       &kp MINUS          &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE  &none  &none
&trans  &none  &kp N1  &kp N2      &kp N3             &kp EQUAL          &none   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE         &none  &none
                       &kp PERIOD  &mt LEFT_SHIFT N0  &mt LCTRL ENTER    &trans  &trans                &trans
            >;

            label = "NumSym";
        };

        Media {
            bindings = <
&trans  &trans            &trans      &kp K_CALCULATOR     &kp C_VOLUME_UP    &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans      &kp C_AL_SPELLCHECK  &kp C_VOLUME_DOWN  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_PLAY_PAUSE  &kp C_PREV  &kp C_NEXT           &kp C_MUTE         &kp LG(LS(A))    &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans               &trans             &kp LA(SPACE)    &trans  &trans  &trans
            >;

            label = "Media";
        };

        Utility {
            bindings = <
&none  &kp LG(LS(T))  &kp F7  &kp F8  &kp F9  &kp F10    &bt BT_SEL 4  &bt BT_CLR    &none     &none         &none      &none
&none  &kp LG(LS(S))  &kp F4  &kp F5  &kp F6  &kp F11    &bt BT_SEL 2  &bt BT_SEL 3  &none     &kp UP_ARROW  &none      &none
&none  &kp LG(LS(C))  &kp F1  &kp F2  &kp F3  &kp F12    &bt BT_SEL 0  &bt BT_SEL 1  &kp LEFT  &kp DOWN      &kp RIGHT  &none
                              &trans  &trans  &trans     &trans        &trans        &trans
            >;

            label = "Utility";
        };

        arrows {
            bindings = <
&trans  &trans  &kp HOME                 &kp UP    &kp END                  &kp PAGE_UP      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT                 &kp DOWN  &kp RIGHT                &kp PAGE_DOWN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mt HOME LC(LEFT_ARROW)  &trans    &mt END LC(RIGHT_ARROW)  &trans           &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans    &trans                   &trans           &trans  &trans  &trans
            >;

            label = "arrows";
        };

        Gaming {
            bindings = <
&trans  &sl 1           &kp Q  &kp W  &kp E  &kp R        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_SHIFT  &kp A  &kp S  &kp D  &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL       &kp Z  &kp X  &kp C  &kp V        &trans  &trans  &trans  &trans  &trans  &trans
                               &kp T  &kp G  &kp SPACE    &trans  &trans  &trans
            >;

            label = "Gaming";
        };

        Hand_Swap {
            bindings = <
&trans  &kp SEMI  &kp Y    &kp U      &kp L   &kp J     &kp G            &kp P                  &kp F          &kp W  &kp Q  &trans
&trans  &kp O     &kp I    &kp E      &kp N   &kp H     &kp D            &kp T                  &kp R          &kp S  &kp A  &trans
&trans  &kp FSLH  &kp DOT  &kp COMMA  &kp M   &kp K     &kp B            &kp V                  &kp C          &kp X  &kp Z  &trans
                           &trans     &trans  &trans    &mt RCTRL ENTER  &mt RIGHT_SHIFT SPACE  &kp RIGHT_ALT
            >;
        };

        Thumb_Swap {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &lt 6 ENTER    &trans  &trans  &trans
            >;
        };

        BlueTooth {
            bindings = <
&trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans        &trans        &bt BT_CLR    &trans  &trans  &trans  &trans  &trans  &trans
                              &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };
    };
};
