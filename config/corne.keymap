/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 38>;
        };

        PreviousApp {
            bindings = <&kp LA(TAB)>;
            key-positions = <15 16>;
        };

        NextApp {
            bindings = <&kp LA(LS(TAB))>;
            key-positions = <13 14>;
        };

        CtrlAltDelete {
            bindings = <&kp LC(LA(DELETE))>;
            key-positions = <0 12 24>;
        };

        LeftHandArrows {
            bindings = <&tog 4>;
            key-positions = <16 15 14>;
        };

        MoveWindowRight {
            bindings = <&kp LG(RIGHT)>;
            key-positions = <3 4>;
        };

        MoveWindowLeft {
            bindings = <&kp LG(LEFT)>;
            key-positions = <2 3>;
        };

        Maximize {
            bindings = <&kp LG(UP_ARROW)>;
            key-positions = <1 2 3>;
        };

        Minimize {
            bindings = <&kp LG(DOWN)>;
            key-positions = <28 27 26>;
        };

        NextDesktop {
            bindings = <&kp LC(LG(RIGHT))>;
            key-positions = <4 16 28>;
        };

        PreviousDesktop {
            bindings = <&kp LG(LC(LEFT))>;
            key-positions = <2 14 26>;
        };
    };

    macros {
    };

    behaviors {
        HoldTapLayer: HoldTapLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAPLAYER";
            bindings =
                <&mo>,
                <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
          &kp TAB  &kp Q  &kp W          &kp E                 &kp R      &kp T       &kp Y  &kp U         &kp I    &kp O     &kp P  &kp BACKSLASH
&HoldTapLayer 1 3  &kp A  &kp S          &kp D                 &kp F      &kp G       &kp H  &kp J         &kp K    &kp L  &kp SEMI        &kp SQT
        &kp LCTRL  &kp Z  &kp X          &kp C                 &kp V      &kp B       &kp N  &kp M     &kp COMMA  &kp DOT  &kp FSLH    &key_repeat
                                 &kp BACKSPACE  &mt LEFT_SHIFT ENTER  &kp SPACE    &kp LWIN  &mo 2  &kp LEFT_ALT
            >;
        };

        NumSym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none  &kp N7      &kp N8        &kp N9     &kp N0     &none   &none   &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
 &sl 0  &sl 2  &kp N4      &kp N5  &kp NUMBER_6  &kp EQUAL     &none   &none   &none        &kp LEFT_BRACE        &kp RIGHT_BRACE  &none
&trans  &none  &kp N1      &kp N2        &kp N3  &kp MINUS     &none   &none   &none      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &none
                       &kp DELETE        &trans  &kp ENTER    &trans  &trans  &trans
            >;

            label = "NumSym";
        };

        Utility {
            bindings = <
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10      &kp K_SCROLL_UP        &trans  &kp UP_ARROW    &kp PAGE_UP       &kp HOME  &kp END
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &kp K_SCROLL_DOWN      &kp LEFT      &kp DOWN      &kp RIGHT  &kp PAGE_DOWN   &trans
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp PAGE_DOWN         &trans   &trans
                        &trans  &trans   &trans               &trans        &trans        &trans
            >;

            label = "Utility";
        };

        TopNumbers {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "TopNumbers";
        };

        LeftSideArrows {
            label = "LeftSideArrows";
            bindings = <
&trans  &trans    &trans  &kp UP_ARROW   &kp HOME  &kp END    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LEFT      &kp DOWN  &kp RIGHT   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans        &trans     &trans   &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans     &trans   &trans    &trans  &trans  &trans
            >;
        };
    };
};
