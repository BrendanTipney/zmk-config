/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <16 38>;
        };

        AppSwitcher {
            bindings = <&AppSwitcherEngage>;
            key-positions = <15 16 14>;
        };

        CtrlAltDelete {
            bindings = <&kp LC(LA(DELETE))>;
            key-positions = <1 13 25>;
        };

        MoveWindowRight {
            bindings = <&kp LG(RIGHT)>;
            key-positions = <3 4>;
        };

        MoveWindowLeft {
            bindings = <&kp LG(LEFT)>;
            key-positions = <2 1>;
        };

        Maximize {
            bindings = <&kp LG(UP_ARROW)>;
            key-positions = <2 3 4>;
        };

        Minimize {
            bindings = <&kp LG(DOWN)>;
            key-positions = <28 27 26>;
        };

        NextDesktop {
            bindings = <&kp LC(LG(RIGHT))>;
            key-positions = <4 16 28>;
        };

        PreviousDesktop {
            bindings = <&kp LG(LC(LEFT))>;
            key-positions = <2 14 26>;
        };

        AppView {
            bindings = <&kp LG(TAB)>;
            key-positions = <13 14 15 16>;
        };

        End {
            bindings = <&kp END>;
            key-positions = <17 16 15>;
        };

        Home {
            bindings = <&kp HOME>;
            key-positions = <14 13 15>;
        };

        PageUp {
            bindings = <&kp PAGE_UP>;
            key-positions = <4 16>;
        };

        PageDown {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <16 28>;
        };

        EndOfPage {
            bindings = <&kp LC(END)>;
            key-positions = <17 16 15 38>;
        };

        StartOfPage {
            bindings = <&kp LC(HOME)>;
            key-positions = <15 14 13 38>;
        };

        OpenApp {
            bindings = <&kp LA(SPACE)>;
            key-positions = <16 15 14>;
        };

        Brace {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        EndBrace {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 9>;
        };

        CurlyBrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <19 20>;
        };

        EndCurlyBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <20 21>;
        };

        SquareBrace {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        EndSquareBrace {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <14 13>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <16 15>;
        };

        Escape {
            bindings = <&kp ESC>;
            key-positions = <1 2 3 4 5>;
        };
    };

    macros {
        AppSwitcherEngage: AppSwitcherEngage {
            compatible = "zmk,behavior-macro";
            label = "APPSWITCHERENGAGE";
            #binding-cells = <0>;
            bindings = <&kp LA(TAB) &tog 5>;
        };
        AppSwitcherDisengage: AppSwitcherDisengage {
            compatible = "zmk,behavior-macro";
            label = "APPSWITCHERDISENGAGE";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&tog 5>;
        };
    };

    behaviors {
        HoldTapLayer: HoldTapLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAPLAYER";
            bindings =
                <&mo>,
                <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <12>;
        };
        TriggerOnRelease: TriggerOnRelease {
            compatible = "zmk,behavior-hold-tap";
            label = "TRIGGERONRELEASE";
            bindings =
                <&kp>,
                <&none>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <15>;
            hold-trigger-on-release;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q    &kp W    &kp E        &kp R                 &kp T                 &kp Y     &kp U  &kp I        &kp O    &kp P     &none
&none  &lt 1 A  &lt 4 S  &mt LCTRL D  &kp F                 &kp G                 &kp H     &kp J  &mt RCTRL K  &kp L    &kp SEMI  &none
&none  &kp Z    &kp X    &kp C        &kp V                 &kp B                 &kp N     &kp M  &kp COMMA    &kp DOT  &kp FSLH  &none
                         &kp LCTRL    &mt LEFT_SHIFT SPACE  &mt LEFT_ALT ENTER    &kp LWIN  &mo 2  &key_repeat
            >;
        };

        NumSym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none  &kp N7  &kp N8  &kp N9        &kp N0       &none   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH     &none  &none
&trans  &none  &kp N4  &kp N5  &kp NUMBER_6  &kp MINUS    &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE  &none  &none
&trans  &none  &kp N1  &kp N2  &kp N3        &kp EQUAL    &none   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE         &none  &none
                       &trans  &trans        &trans       &trans  &trans                &trans
            >;

            label = "NumSym";
        };

        Utility {
            bindings = <
&none  &kp LG(LS(T))  &kp F7  &kp F8  &kp F9  &kp F10    &kp K_SCROLL_UP    &none         &kp UP_ARROW  &kp PAGE_UP    &kp HOME    &none
&none  &kp LG(LS(S))  &kp F4  &kp F5  &kp F6  &kp F11    &kp K_SCROLL_DOWN  &kp LEFT      &kp DOWN      &kp RIGHT      &kp END     &none
&none  &kp LG(LS(C))  &kp F1  &kp F2  &kp F3  &kp F12    &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &kp PAGE_DOWN  &bt BT_CLR  &none
                              &trans  &trans  &trans     &trans             &trans        &trans
            >;

            label = "Utility";
        };

        TopNumbers {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "TopNumbers";
        };

        Media {
            bindings = <
&trans  &trans            &trans      &kp K_CALCULATOR     &kp C_VOLUME_UP    &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans            &trans      &kp C_AL_SPELLCHECK  &kp C_VOLUME_DOWN  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_PLAY_PAUSE  &kp K_PREV  &kp K_NEXT           &kp K_MUTE         &kp LG(LS(A))    &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans               &trans             &kp LA(SPACE)    &trans  &trans  &trans
            >;

            label = "Media";
        };

        AppSwitcher {
            bindings = <
&none  &none  &none        &none                  &none    &none     &none   &none   &none   &none  &none  &none
&none  &none  &kp LS(TAB)  &AppSwitcherDisengage  &kp TAB  &none     &none   &none   &none   &none  &none  &none
&none  &none  &none        &none                  &none    &none     &none   &none   &none   &none  &none  &none
                           &trans                 &trans   &trans    &trans  &trans  &trans
            >;

            label = "AppSwitcher";
        };
    };
};
